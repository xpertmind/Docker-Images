FROM alpine:latest as build
ENV NX_VER 1.21.5
ENV LINUX_VER 'Alpine Latest'
ENV NX_BUILD_NAME Ludbreg
ENV NX_BUILD_DATE 2022-01-09
LABEL maintainer="Bruno Šimić <bruno@xpertmind.de>" \
    architecture="amd64/x86_64" \
    nginx-version="${NX_VER}" \
    linux-version="${LINUX_VER}" \
    build-date="${NX_BUILD_DATE}" \
    description="Nginx Docker image based on ${LINUX_VER} incl. (dynamic) Pagespeed module"

COPY ./resources/* /tmp/

RUN build_pkgs="alpine-sdk build-base linux-headers zlib-dev net-tools pcre-dev util-linux-dev git make gcc g++ pkgconfig wget unzip shadow" && \
  runtime_pkgs="bash tzdata ca-certificates libressl-dev libxslt-dev libgd geoip-dev nano" && \
  apk --no-cache add ${build_pkgs} ${runtime_pkgs} && \
  #addgroup --system --gid 101 nginx && \
  #adduser --system --ingroup nginx --no-create-home --gecos "nginx user" --shell /bin/false --uid 101 nginx && \
  groupmod -g 82 www-data &&\
  adduser --system --ingroup www-data --no-create-home --gecos "www-data user" --shell /bin/false --uid 82 www-data && \
  ## pagespeed
  mkdir -p /etc/nginx/modules && \
  cd /tmp && \
  wget -O /tmp/install_ps.sh https://ngxpagespeed.com/install && chmod 755 /tmp/install_ps.sh && \
  /tmp/install_ps.sh -y -v latest-stable -m -b /etc/nginx/modules/ && \
  cd /tmp && \
  wget https://nginx.org/download/nginx-${NX_VER}.tar.gz && \
  tar xzf nginx-${NX_VER}.tar.gz && \
  cd /tmp/nginx-${NX_VER} && \
  ./configure \
    --prefix=/etc/nginx \
    --build=${NX_BUILD_NAME} \
    --sbin-path=/usr/sbin/nginx \
    --conf-path=/etc/nginx/nginx.conf \
    --error-log-path=/var/log/nginx/error.log \
    --http-log-path=/var/log/nginx/access.log \
    --user=www-data \
    --group=www-data \
    --pid-path=/var/run/nginx.pid \
    --lock-path=/var/run/nginx.lock \
    --http-client-body-temp-path=/var/cache/nginx/client_temp \
    --http-proxy-temp-path=/var/cache/nginx/proxy_temp \
    --http-fastcgi-temp-path=/var/cache/nginx/fastcgi_temp \
    --http-uwsgi-temp-path=/var/cache/nginx/uwsgi_temp \
    --http-scgi-temp-path=/var/cache/nginx/scgi_temp \
    --with-http_ssl_module \
    --with-http_realip_module \
    --with-http_addition_module \
    --with-http_sub_module \
    --with-http_mp4_module \
    --with-http_gunzip_module \
    --with-http_gzip_static_module \
    --with-http_random_index_module \
    --with-http_secure_link_module \
    --with-http_stub_status_module \
    --with-http_auth_request_module \
    --with-http_geoip_module \
    --http-log-path=/var/log/nginx/access.log \
    --with-threads \
    --with-stream \
    --with-stream_ssl_module \
    --with-stream_realip_module \
    --with-http_realip_module \
    --with-http_slice_module \
    --with-http_v2_module \
    --with-pcre-jit \
    --with-cc-opt='-O2 -fstack-protector-strong -Wformat -Werror=format-security -fPIC -D_FORTIFY_SOURCE=2' \
    --with-ld-opt='-Wl,-Bsymbolic-functions -Wl,-z,relro -Wl,-z,now -fPIC' \
    --add-dynamic-module=/etc/nginx/modules/incubator-pagespeed-ngx-latest-stable && \
  make && \
  make install && \
#  sed -i -e 's/#access_log  logs\/access.log  main;/access_log \/dev\/stdout;/' -e 's/#error_log  logs\/error.log  notice;/error_log stderr notice;/' /etc/nginx/nginx.conf && \
  apk del ${build_pkgs} && \
  rm -rf /var/cache/apk/* && \
  mkdir -p /var/www/html && \
  mv /tmp/index.html /var/www/html/index.html &&\
  mv /tmp/nginx.conf /etc/nginx/nginx.conf &&\
  mkdir -p /var/cache/nginx && \
  chown -R www-data:www-data /var/www/html &&\
  chown -R www-data:www-data /var/cache/nginx &&\
  chown -R www-data:www-data /var/log/nginx &&\
  rm -rf /tmp/* && rm -rfd /etc/nginx/modules/incubator-pagespeed-ngx-latest-stable

# Define mountable directories.
VOLUME ["/etc/nginx", "/var/log", "/var/www/html"]

# Define working directory.
WORKDIR /etc/nginx

EXPOSE 80

ENTRYPOINT ["nginx", "-g", "daemon off;"]
